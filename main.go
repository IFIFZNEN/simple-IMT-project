package main

import (
	"bufio"
	"fmt"
	"math"
	"os"
	"strconv"
	"strings"
)

const IMTPower = 2

func main() {
	fmt.Println("‚öñÔ∏è___ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Å—Å—ã —Ç–µ–ª–∞ ___ ‚öñÔ∏è")
	userHeight := getValidInput("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 192.1): ")
	userKg := getValidInput("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä: 90): ")
	IMT := calculateIMT(userHeight, userKg)
	outputResult(IMT)

	switch {
	case IMT < 16:
		fmt.Println("ü¶¥ –£ –≤–∞—Å —Å–∏–ª—å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞")
	case IMT < 18.5:
		fmt.Println("üçñ –£ –≤–∞—Å –¥–µ—Ñ–∏—Ü–∏—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞")
	case IMT < 25:
		fmt.Println("üòé –£ –≤–∞—Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å")
	case IMT < 30:
		fmt.Println("üëÄ –£ –≤–∞—Å –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å")
	case IMT < 40:
		fmt.Println("üò± –£ –≤–∞—Å 2-—è —Å—Ç–µ–ø–µ–Ω—å –æ–∂–∏—Ä–µ–Ω–∏—è")
	case IMT >= 40:
		fmt.Println("ü§Ø –£ –≤–∞—Å 3-—è —Å—Ç–µ–ø–µ–Ω—å –æ–∂–∏—Ä–µ–Ω–∏—è")
	default:
		fmt.Println("–ù–µ –º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –≤–µ—Å")
	}
}

func getValidInput(prompt string) float64 {
	reader := bufio.NewReader(os.Stdin)
	for {
		fmt.Print(prompt)
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)

		value, err := strconv.ParseFloat(input, 64)
		if err == nil && value > 0 {
			return value
		}
		fmt.Println("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!")
	}
}

func outputResult(imt float64) {
	fmt.Printf("‚úÖ –í–∞—à –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞: %.0f\n", imt)
}

func calculateIMT(userHeight, userKg float64) float64 {
	result := userKg / math.Pow(userHeight/100, IMTPower)
	return result
}
