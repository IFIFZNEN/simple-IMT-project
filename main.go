package main

import (
	"fmt"
	"math"
)

const IMTPower = 2

func main() {

	fmt.Println("‚öñÔ∏è___ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Å—Å—ã —Ç–µ–ª–∞ ___ ‚öñÔ∏è")
	for {
	userHeight, userKg := getUserInput()
	IMT := calculateIMT(userHeight, userKg)
	outputResult(IMT)
	isRepeateCalculation := checkRepeateCalculation()
	if !isRepeateCalculation{
		break
	}
	}

}

func outputResult(imt float64) {
	fmt.Printf("‚úÖ –í–∞—à –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞: %.0f\n", imt)
	
	switch {
	case imt < 16:
		fmt.Println("ü¶¥ –£ –≤–∞—Å —Å–∏–ª—å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞")
	case imt < 18.5:
		fmt.Println("üçñ –£ –≤–∞—Å –¥–µ—Ñ–∏—Ü–∏—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞")
	case imt < 25:
		fmt.Println("üòé –£ –≤–∞—Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å")
	case imt < 30:
		fmt.Println("üëÄ –£ –≤–∞—Å –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å")
	case imt < 40:
		fmt.Println("üò± –£ –≤–∞—Å 2-—è —Å—Ç–µ–ø–µ–Ω—å –æ–∂–∏—Ä–µ–Ω–∏—è")
	case imt >= 40:
		fmt.Println("ü§Ø –£ –≤–∞—Å 3-—è —Å—Ç–µ–ø–µ–Ω—å –æ–∂–∏—Ä–µ–Ω–∏—è")
	default:
		fmt.Println("–ù–µ –º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –≤–µ—Å")
	}
}

func calculateIMT(userHeight, userKg float64) float64 {
	result := userKg / math.Pow(userHeight/100, IMTPower)
	return result
}

func checkRepeateCalculation() bool{
	var userChoise string
	fmt.Print("–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è? Y/N: ")
	fmt.Scan(&userChoise)
	if userChoise == "y" || userChoise == "Y" {
		return true
	}
	return false
}

func getUserInput() (float64, float64) {
	var userHeight float64
	var userKg float64

	fmt.Println("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 192.1): ")
	fmt.Scan(&userHeight)
	fmt.Println("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä: 90): ")
	fmt.Scan(&userKg)
	return userHeight, userKg
}